--------------------
setting learning rate to 0.001
--------------------
########################
logging outputs to  /root/CS285_homework/hw3/cs285/scripts/../../data/hw3_dqn_dqn_LunarLander-v2_s64_l2_d0.99_doubleq_03-06-2024_11-14-45
########################
Using GPU id 0
Agent details:
{'training': True, '_parameters': OrderedDict(), '_buffers': OrderedDict(), '_non_persistent_buffers_set': set(), '_backward_pre_hooks': OrderedDict(), '_backward_hooks': OrderedDict(), '_is_full_backward_hook': None, '_forward_hooks': OrderedDict(), '_forward_hooks_with_kwargs': OrderedDict(), '_forward_hooks_always_called': OrderedDict(), '_forward_pre_hooks': OrderedDict(), '_forward_pre_hooks_with_kwargs': OrderedDict(), '_state_dict_hooks': OrderedDict(), '_state_dict_pre_hooks': OrderedDict(), '_load_state_dict_pre_hooks': OrderedDict(), '_load_state_dict_post_hooks': OrderedDict(), '_modules': OrderedDict([('critic', Sequential(
  (0): Linear(in_features=8, out_features=64, bias=True)
  (1): Tanh()
  (2): Linear(in_features=64, out_features=64, bias=True)
  (3): Tanh()
  (4): Linear(in_features=64, out_features=4, bias=True)
  (5): Identity()
)), ('target_critic', Sequential(
  (0): Linear(in_features=8, out_features=64, bias=True)
  (1): Tanh()
  (2): Linear(in_features=64, out_features=64, bias=True)
  (3): Tanh()
  (4): Linear(in_features=64, out_features=4, bias=True)
  (5): Identity()
)), ('critic_loss', MSELoss())]), 'critic_optimizer': Adam (
Parameter Group 0
    amsgrad: False
    betas: (0.9, 0.999)
    capturable: False
    differentiable: False
    eps: 1e-08
    foreach: None
    fused: None
    initial_lr: 0.001
    lr: 0.001
    maximize: False
    weight_decay: 0
), 'lr_scheduler': <torch.optim.lr_scheduler.ConstantLR object at 0x7fe3dd354ca0>, 'observation_shape': (8,), 'num_actions': 4, 'discount': 0.99, 'target_update_period': 1000, 'clip_grad_norm': None, 'use_double_q': True}

step : 0
eval_return : -295.8836
eval_ep_len : 60.6
eval return_std : 235.54669
eval return_max : -93.152016
eval return_min : -827.89844
eval ep_len_std : 9.86103442849684
eval ep_len_max : 84
eval ep_len_min : 52

step : 10000
eval_return : -348.86346
eval_ep_len : 65.4
eval return_std : 209.20412
eval return_max : -98.733154
eval return_min : -634.85565
eval ep_len_std : 12.109500402576483
eval ep_len_max : 90
eval ep_len_min : 53

step : 20000
eval_return : -307.14984
eval_ep_len : 68.9
eval return_std : 234.23784
eval return_max : -96.96165
eval return_min : -842.468
eval ep_len_std : 14.031749712705112
eval ep_len_max : 92
eval ep_len_min : 55

step : 30000
eval_return : -182.08632
eval_ep_len : 665.0
eval return_std : 16.594322
eval return_max : -143.449
eval return_min : -198.4239
eval ep_len_std : 60.71902502511054
eval ep_len_max : 760
eval ep_len_min : 555

step : 40000
eval_return : -134.34726
eval_ep_len : 1000.0
eval return_std : 21.646498
eval return_max : -94.45012
eval return_min : -167.28712
eval ep_len_std : 0.0
eval ep_len_max : 1000
eval ep_len_min : 1000

step : 50000
eval_return : -59.17174
eval_ep_len : 839.4
eval return_std : 23.38518
eval return_max : -25.360712
eval return_min : -108.23815
eval ep_len_std : 322.7656115511688
eval ep_len_max : 1000
eval ep_len_min : 126

step : 60000
eval_return : -101.27576
eval_ep_len : 630.0
eval return_std : 66.82754
eval return_max : -37.507057
eval return_min : -266.89862
eval ep_len_std : 389.513029307108
eval ep_len_max : 1000
eval ep_len_min : 133

step : 70000
eval_return : -69.92163
eval_ep_len : 818.7
eval return_std : 57.68463
eval return_max : -8.293885
eval return_min : -193.80179
eval ep_len_std : 301.66340513890646
eval ep_len_max : 1000
eval ep_len_min : 154

step : 80000
eval_return : -53.93992
eval_ep_len : 1000.0
eval return_std : 27.506372
eval return_max : -29.316656
eval return_min : -121.408516
eval ep_len_std : 0.0
eval ep_len_max : 1000
eval ep_len_min : 1000

step : 90000
eval_return : -52.629646
eval_ep_len : 1000.0
eval return_std : 21.673998
eval return_max : -20.097412
eval return_min : -98.89649
eval ep_len_std : 0.0
eval ep_len_max : 1000
eval ep_len_min : 1000

step : 100000
eval_return : -46.491764
eval_ep_len : 913.8
eval return_std : 36.390472
eval return_max : -6.957756
eval return_min : -112.01443
eval ep_len_std : 258.6
eval ep_len_max : 1000
eval ep_len_min : 138

step : 110000
eval_return : -68.29354
eval_ep_len : 912.8
eval return_std : 26.359337
eval return_max : -29.860394
eval return_min : -120.39378
eval ep_len_std : 261.59999999999997
eval ep_len_max : 1000
eval ep_len_min : 128

step : 120000
eval_return : -57.38371
eval_ep_len : 1000.0
eval return_std : 36.363174
eval return_max : -5.371829
eval return_min : -142.09398
eval ep_len_std : 0.0
eval ep_len_max : 1000
eval ep_len_min : 1000

step : 130000
eval_return : -72.491844
eval_ep_len : 921.8
eval return_std : 31.160975
eval return_max : -25.640032
eval return_min : -142.78557
eval ep_len_std : 234.6
eval ep_len_max : 1000
eval ep_len_min : 218

step : 140000
eval_return : -61.45117
eval_ep_len : 943.7
eval return_std : 44.806313
eval return_max : -14.677789
eval return_min : -178.46469
eval ep_len_std : 168.9
eval ep_len_max : 1000
eval ep_len_min : 437

step : 150000
eval_return : -114.5917
eval_ep_len : 678.9
eval return_std : 105.385796
eval return_max : 117.15169
eval return_min : -286.94763
eval ep_len_std : 260.52963363118596
eval ep_len_max : 1000
eval ep_len_min : 312

step : 160000
